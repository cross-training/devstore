version: "3"
networks:
  backend:
  frontend:
services:
  postgres:
    container_name: postgres
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_DB=northwind    
      - POSTGRES_USER=northwind
      - POSTGRES_PASSWORD=northwind
    ports:
      - 5432:5432  
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "northwind" ]
      interval: 3s
      timeout: 1s
      retries: 10  
  backend:
    depends_on:
      - postgres
    image: TODO
    restart: always
    deploy:
      replicas: 3
      resources:        
        limits:
          cpus: '0.25'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 500M    
    environment:
      HOST: http://0.0.0.0
      API_PORT: 9001
      DB_UR: jdbch2:mem:testdb
      DB_DRIVER: org.h2.Driver
      DB_PLATFORM: org.hibernate.dialect.H2Dialect
      DB_USER: sa
      DB_PASSWORD: password
    networks:
      - frontend
      - backend          
    healthcheck:
      test: curl --fail http://localhost:9001/api/health || exit 1
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s
  nginx:
    depends_on:
      - backend  
    container_name: nginx
    image: nginx:latest     
    ports:
      - 9200:9200
    expose:
      - 9200  
    networks:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro        
  prometheus:
    depends_on:
      - orm
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus      
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      - backend
      - frontend
  grafana:
    depends_on:
      - prometheus
    image: grafana/grafana:7.1.5
    container_name: grafana    
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - frontend
    volumes:      
      - ./grafana/provisioning:/etc/grafana/provisioning  