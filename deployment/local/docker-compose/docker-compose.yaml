version: "3"
networks:
  backend:
services:

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_DATABASE}    
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432  
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}" ]
      interval: 3s
      timeout: 1s
      retries: 10

  tracing:
    image: openzipkin/zipkin
    container_name: tracing
    environment:
    - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
    ports:
     - 9411:9411
    networks:
      - backend

  config:
    image: crosstraining/config-server:0.0.26   
    container_name: config
    restart: always
    environment:
      PORT: 8080
      CONFIG_SERVICE_USERNAME: ${CONFIG_SERVICE_USERNAME}
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      CONFIG_SERVICE_REPO_URI: https://github.com/cross-training/devstore-config.git
      CONFIG_SERVICE_REPO_LABEL: main
      CONFIG_SERVICE_REPO_PATHS: services
      CONFIG_SERVICE_REPO_USERNAME: ''
      CONFIG_SERVICE_REPO_PASSWORD: ''
      TRACE_SERVICE_URI: http://tracing:9411      
    healthcheck:
      test: ["CMD", "curl", "-I", "http://localhost:8080/actuator/health"]
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      - tracing
    ports:
     - 8888:8080
    networks:
      - backend
  
  discovery:
    image: crosstraining/discovery-service:0.0.26
    container_name: discovery
    environment:
      PORT: 8080
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_URI: http://config:8888
      CONFIG_SERVICE_USERNAME: ${CONFIG_SERVICE_USERNAME}
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      TRACE_SERVICE_URI: http://tracing:9411   
    healthcheck:
      test: ["CMD", "curl", "-I", "http://localhost:8080/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    depends_on:
      config:
        condition: service_healthy
    ports:
     - 8761:8080
    networks:
      - backend

  gateway:
    image: crosstraining/api-gateway:0.0.27
    container_name: gateway
    environment:
      PORT: 8080
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_URI: http://config:8888
      CONFIG_SERVICE_USERNAME: ${CONFIG_SERVICE_USERNAME}
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      DISCOVERY_SERVICE_URI: http://discovery:8761/eureka/
      TRACE_SERVICE_URI: http://tracings:9411       
    healthcheck:
      test: ["CMD", "curl", "-I", "http://localhost:8080/actuator/health"]
      interval: 5s
      timeout: 3ss
      retries: 10
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy 
    ports:
     - 8080:8080
    networks:
      - backend

  # catalog:    
  #   image: crosstraining/devstore-catalog:1.1.28
  #   container_name: catalog
  #   restart: always
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     config:
  #       condition: service_healthy
  #     discovery:
  #       condition: service_healthy
  #   environment:
  #     PORT: 8080
  #     SPRING_PROFILES_ACTIVE: docker
  #     CONFIG_SERVICE_URI: http://config:8888
  #     CONFIG_SERVICE_USERNAME: ${CONFIG_SERVICE_USERNAME}
  #     CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
  #     DISCOVERY_SERVICE_URI: http://discovery:8761/eureka/
  #     TRACE_SERVICE_URI: http://tracing:9411 
  #     DB_URL: jdbc:postgresql://postgres:5432/devstore
  #     DB_USER: catalog
  #     DB_PASSWORD: catalog
  #     DB_SCHEMA: catalog  
  #   ports:
  #    - 9001:8080  
  #   networks:
  #     - backend          
  #   healthcheck:
  #     test: curl --fail http://localhost:8080/actuator/health || exit 1
  #     interval: 10s
  #     retries: 3
  #     start_period: 30s
  #     timeout: 5s

  # rating:
  #   image: crosstraining/devstore-rating:1.1.28
  #   restart: always
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     config:
  #       condition: service_healthy
  #     discovery:
  #       condition: service_healthy 
  #   environment:
  #     PORT: 8080
  #     SPRING_PROFILES_ACTIVE: docker
  #     CONFIG_SERVICE_URI: http://config:8888
  #     CONFIG_SERVICE_USERNAME: ${CONFIG_SERVICE_USERNAME}
  #     CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
  #     DISCOVERY_SERVICE_URI: http://discovery:8761/eureka/
  #     TRACE_SERVICE_URI: http://tracing:9411 
  #     DB_URL: jdbc:postgresql://postgres:5432/devstore
  #     DB_USER: rating
  #     DB_PASSWORD: rating
  #     DB_SCHEMA: rating
  #   ports:
  #    - 9002:8080  
  #   networks:
  #     - backend          
  #   healthcheck:
  #     test: curl --fail http://localhost:8080/actuator/health || exit 1
  #     interval: 10s
  #     retries: 3
  #     start_period: 30s
  #     timeout: 5s
  
  # prometheus:
  #   image: prom/prometheus:v2.20.1
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus:/etc/prometheus      
  #   ports:
  #     - 9090:9090
  #   expose:
  #     - 9090
  #   networks:
  #     - backend
  
  # grafana:
  #   depends_on:
  #     - prometheus
  #   image: grafana/grafana:7.1.5
  #   container_name: grafana    
  #   environment:
  #     - GF_AUTH_DISABLE_LOGIN_FORM=true
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #   ports:
  #     - 3000:3000
  #   expose:
  #     - 3000
  #   networks:
  #     - backend
  #   volumes:      
  #     - ./grafana/provisioning:/etc/grafana/provisioning  