plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'cloud.crosstraining.devstore.discovery'
version = '0.0.1'
description = 'Spring DevStore Discovery Server'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	// JAXB is required since Java 9
    implementation 'org.glassfish.jaxb:jaxb-runtime'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'	
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


ext {
	set('springCloudVersion', "2023.0.1")
	dockerImageExposedPort = 9100
    dockerImageDockerfileDir = "${projectDir}/../docker"
}

docker {
    name "${project.group}/${project.name}:${project.version}"
    files dockerImageDockerfileDir.listFiles()
    buildArgs(['EXPOSED_PORT': dockerImageExposedPort.toString()])
    dockerfile file("${dockerImageDockerfileDir}/Dockerfile")
    copySpec.from('build/libs').into('app')
    pull true
}

tasks.register('buildDocker') {
    group = 'docker'
    description = 'Build Docker image'
    dependsOn tasks.docker
}
